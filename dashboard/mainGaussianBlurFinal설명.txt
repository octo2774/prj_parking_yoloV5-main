트래커 함수 이후

메인부터
52/  OpenCV에서 CV2를 넣고
56/  tracker 객체를 생성하여
58/  주차장 동영상을 읽어옵니다.

62/  object_detector를 이용하여 물체를 감지하고 
64/  while문으로 반복을 하게 됩니다. 
65/  cap의 불러온 동영상(B3_Parking)의 프레임을 읽고 ret으로 나머지 값을 버립니다.
65/  height높이와 width너비를 구하기 위해 선언하고
69/  roi로 필요한 영역을 설정합니다. x값은 50부터 150까지이며, y값은 100부터 200까지 가능합니다. 
    본 프로그램은 한곳의 영역만 표시하기 때문에 각 값을 중해주고  주석처리하였습니다.
75/  이후엔 감지를 위해 Object_Detection을 사용하여 mask에 roi를 적용했습니다.
76/  그다음 Gaussioan_Blur로 흑백에서 백색을 부분들을 모아서 표현하도록 하였습니다.(헤드라이트포함)
78/  threshold와 BINARY로 흑백을 구분하고 오차는 임계값으로 정해지게 됩니다. +기호의 or로 연산을 묶게 됩니다.
84/  contours는 테두리를 설명찾기{cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE 은 찾아볼 것.}
85/  detections는 감지한 것을 넣는 list입니다.
86/  for문으로 contours의 요소들을 사용하게 됩니다.
88/  area도 contours 요소를 사용합니다.
89/  if로 범위의 크기를 설정하고
90/  cv2로 contours= 둥근 원을 테두리를 나타나게 합니다.
91/  사각형으로 만들고 x와 y의 높이와  너비값을 가지고 옵니다.
94/  위의 값을 list에 넣게 됩니다. 

그다음

97/  object Tracking을 활용하여 저장한 박스id들을 가져옵니다.
98/  for문으로 이용하여 하나씩 가져옵니다.
99/  각 값들을 for문으로 id를 보냅니다.
100/ id에 번호를 매기게 됩니다.
101/ 초록색 rectangle에 박스를 그리게 됩니다.

103/ roi 영역을 보여주게 됩니다. 
104/ 기본 영상을 보여줍니다.
105/ 흑백으로 축정된 영상을 보여줍니다.

107/ key로 whitekey값을 적어줍니다.(값이 작을수록 영상이 빠르게 실행)
108/ 만약 key==27이라면  esc로써 종료합니다.

111/ 영상 읽기 종료
112/ 실행창 닫기








